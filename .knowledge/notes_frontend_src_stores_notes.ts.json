{"is_source_file": true, "format": "TypeScript", "description": "This file defines a Pinia store for managing notes, including functions for creating, updating, deleting, selecting notes, and persisting them to localStorage.", "external_files": ["pinia", "vue"], "external_methods": ["localStorage.setItem", "localStorage.getItem", "localStorage.clear", "JSON.stringify", "JSON.parse", "console.error", "console.warn", "crypto.getRandomValues"], "published": ["useNotesStore"], "classes": [], "methods": [{"name": "persist", "description": "Saves the current note state to localStorage."}, {"name": "load", "description": "Loads notes from localStorage or initializes with a default note."}, {"name": "function uuid() { uuid", "description": "Generates a unique identifier for notes.", "scope": "", "scopeKind": ""}, {"name": "function createNoteInternal(title = 'Untitled', content = ''): Note { createNoteInternal", "description": "Creates a new note object with a unique id, title, content, and timestamps.", "scope": "", "scopeKind": ""}, {"name": "function createNote() { createNote", "description": "Creates and selects a new empty note.", "scope": "", "scopeKind": ""}, {"name": "function updateNote(payload: { id: string; title: string; content: string }) { updateNote", "description": "Updates the title and content of a note identified by id.", "scope": "", "scopeKind": ""}, {"name": "function deleteNote(id: string) { deleteNote", "description": "Deletes a note by id and adjusts the selected note accordingly.", "scope": "", "scopeKind": ""}, {"name": "function select(id: string) { select", "description": "Sets the currently selected note by id.", "scope": "", "scopeKind": ""}], "calls": ["localStorage.setItem", "localStorage.getItem", "JSON.stringify", "JSON.parse", "console.error", "console.warn", "crypto.getRandomValues"], "search-terms": ["Pinia store", "notes management", "localStorage persistence", "note creation", "note update", "note deletion", "unique id generation"], "state": 2, "file_id": 19, "knowledge_revision": 39, "git_revision": "", "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^export interface Note {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^const STORAGE_KEY = 'noteease.notes.v1'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  content: string$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  function createNote() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createNoteInternal", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  function createNoteInternal(title = 'Untitled', content = ''): Note {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  createdAt: number$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  function deleteNote(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  id: string$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^    const idx = notes.value.findIndex((n) => n.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "deleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^    const idx = notes.value.findIndex((n) => n.id === payload.id)$/", "language": "TypeScript", "kind": "constant", "scope": "updateNote", "scopeKind": "function"}, {"_type": "tag", "name": "note", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^    const note = createNoteInternal()$/", "language": "TypeScript", "kind": "constant", "scope": "createNote", "scopeKind": "function"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^    const now = Date.now()$/", "language": "TypeScript", "kind": "constant", "scope": "createNoteInternal", "scopeKind": "function"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^      const parsed = JSON.parse(raw) as { notes: Note[]; selectedId: string | null }$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^        const r = (crypto.getRandomValues(new Uint8Array(1))[0] % 16) | 0$/", "language": "TypeScript", "kind": "constant", "scope": "uuid", "scopeKind": "function"}, {"_type": "tag", "name": "r", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^        const v = c === 'x' ? r : (r & 0x3) | 0x8$/", "language": "TypeScript", "kind": "constant", "scope": "uuid", "scopeKind": "function"}, {"_type": "tag", "name": "seed", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^        const seed = createNoteInternal('Welcome to NoteEase', 'Start typing your notes here...'/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "select", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  function select(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  title: string$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  function updateNote(payload: { id: string; title: string; content: string }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  updatedAt: number$/", "language": "TypeScript", "kind": "property", "scope": "Note", "scopeKind": "interface"}, {"_type": "tag", "name": "useNotesStore", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^export const useNotesStore = defineStore('notes', () => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "uuid", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^  function uuid() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/noteease-17060-17102/notes_frontend/src/stores/notes.ts", "pattern": "/^        const v = c === 'x' ? r : (r & 0x3) | 0x8$/", "language": "TypeScript", "kind": "constant", "scope": "uuid", "scopeKind": "function"}], "hash": "2bd2cd45e5c580be94a7b9d5f6199364", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/stores/notes.ts", "fields": [{"name": "export interface Note {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content: string", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "createdAt: number", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "id: string", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "title: string", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}, {"name": "updatedAt: number", "scope": "Note", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"39": ""}]}